package son32map;
import com.ochafik.lang.jnaerator.runtime.Structure;
/**
 * <i>native declaration : Son.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class TSONTimeDate extends Structure<TSONTimeDate, TSONTimeDate.ByValue, TSONTimeDate.ByReference > {
	/// hundreths of a second, 0-99
	public byte ucHun;
	/// seconds, 0-59
	public byte ucSec;
	/// minutes, 0-59
	public byte ucMin;
	/// hour - 24 hour clock, 0-23
	public byte ucHour;
	/// day of month, 1-31
	public byte ucDay;
	/// month of year, 1-12
	public byte ucMon;
	/// year 1980-65535!
	public short wYear;
	public TSONTimeDate() {
		super();
		initFieldOrder();
	}
	protected void initFieldOrder() {
		setFieldOrder(new java.lang.String[]{"ucHun", "ucSec", "ucMin", "ucHour", "ucDay", "ucMon", "wYear"});
	}
	/**
	 * @param ucHun hundreths of a second, 0-99<br>
	 * @param ucSec seconds, 0-59<br>
	 * @param ucMin minutes, 0-59<br>
	 * @param ucHour hour - 24 hour clock, 0-23<br>
	 * @param ucDay day of month, 1-31<br>
	 * @param ucMon month of year, 1-12<br>
	 * @param wYear year 1980-65535!
	 */
	public TSONTimeDate(byte ucHun, byte ucSec, byte ucMin, byte ucHour, byte ucDay, byte ucMon, short wYear) {
		super();
		this.ucHun = ucHun;
		this.ucSec = ucSec;
		this.ucMin = ucMin;
		this.ucHour = ucHour;
		this.ucDay = ucDay;
		this.ucMon = ucMon;
		this.wYear = wYear;
		initFieldOrder();
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected TSONTimeDate newInstance() { return new TSONTimeDate(); }
	public static TSONTimeDate[] newArray(int arrayLength) {
		return Structure.newArray(TSONTimeDate.class, arrayLength);
	}
	public static class ByReference extends TSONTimeDate implements Structure.ByReference {
		
	};
	public static class ByValue extends TSONTimeDate implements Structure.ByValue {
		
	};
}
